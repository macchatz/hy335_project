Client.py:
Ξεκιναει ελεγχοντας τα στοιχεια που του δοθηκαν κατα την κληση και ζητωντας ενα input απο τον χρηστη μεσω της συναρτησης check_input και διορθωνει αν χρειαστει.
Μορφοποιει λιγο τα inputs και παραγει τα κλειδια public και private που χρειαζονται για την κρυπτογραφιση μεσω της generate_keys()
Ανοιγει συνδεση με ολα τα relays που θετονται απο το αρχειο που διδεται ως 4ο κατα την κληση και παιρνει απο τη συναρτηση relay_send_str(.,.,.,.,.,.) ενα αποτελεσμα 
που το αποθηκευει στη λιστα send_public_key. Τυπωνω το public key του καθε relay και περισιλεγω τα signatures.
Μετα αρχιζει η υλοποιηση των pings-traceroutes.
Ο client δινει εντολη στα relays να ξεκινησουν τη διαδικασια ping-traceroute μεσω της CommunicateThread η οποια βοηθαει ωστε να γινονται γρηγοροτερα οι αποστολες των αιτηματων. 
Η CommunicateThread(send-receive) και η CustThread(ping-traceroute) ειναι handlers threads.
Μετεπειτα ξεκινανε τα direct tracxeroute-ping. Χρησιμοποιειται η Traceroute_d η οποια αυξανει το TTL κατα 1 καθε φορα και τελικα βρισκει τον αριθμο των hops, και τα αποθηκευει στο direct_traceroute.txt και η  
ping_d στην οποια οι παραμετροι ειναι αλλαγμενοι για μεγαλυτερη ταχυτητα.
Κλεινουν τα threads και αποθηκευονται τα αποτελεσματα στα αρχεια ping_d και traceroute_d.Τα επεξεργαζομαστε και βγαζουμε σε μεταβλητη το τελικο rtt και τα hops.
Επειτα ξεκινουν τα pings-traceroutes προς τα relays ενα προς ενα μεσω threads και αποθηκευονται τα αποτελεσματα σεαρχεια με ονοματα οπως  traceroute_relay1, ping_relay2 χρησιμοποιωντας και λιστες για να γινει ευκολα join μετα.
Μετα το join των threads τα relays στελνουν πισω τα αποτελεσματα, των traceroutes-pings που εκαναν προς τον end servers και αποθηκευονται με τη μορφη relay1,rtt,hops στο αρχειο relays_results.txt το ενα κατω απο το αλλο.
Συγκρινει τα αποτελεσματα και αθροιζει τον αριθμο των hops μεχρι να φτασουν στον end server απο ολες τις διαδρομες και επιλεγει την βελτιστη δυνατη. Αν ειναι ισα για το κρiτηριο των hops τοτε προτιμαει να γινει μεσω κριτηριου 
latency το οποιο ειναι της μορφης float και σχεδον αδυνατο να ειναι ισο.
Τελος επιλεγει απο που θα κατεβασει το αρχειο και τυπωνει τον χρονο κατεβασματος.
Τυπωνει τα της cryptoγραφισης και τυπωνει και τα TTL, το RTT_direct και το ποτε προσπαθει να συνδεθει με τα relay και απο ποιο port και τον χρονο κατεβασματος στο τελος.
